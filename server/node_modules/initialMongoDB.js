module.exports = function(socket, io)
{
    var socket = socket,
        io = io

    var MongoClient = require('mongodb').MongoClient
    var async = require('async')

    var serverUrl = 'mongodb://127.0.0.1:27017/server'
    var bandUrl = 'mongodb://127.0.0.1:27017/bands'
    var userUrl = 'mongodb://127.0.0.1:27017/users'
    if(process.env.OPENSHIFT_MONGODB_DB_URL){
        serverUrl = process.env.OPENSHIFT_MONGODB_DB_URL + 'server'
        bandUrl = process.env.OPENSHIFT_MONGODB_DB_URL + 'bands'
        userUrl = process.env.OPENSHIFT_MONGODB_DB_URL + 'users'
    }

    this.addToMatch = function(username, socketid, artists)
    {
        var matchCollection
        var userCollection
        var db
        var userdb

        async.series([
            function(callback){
                connectToDatabase(serverUrl, callback)
            },
            function(callback){
                connectToUserDb(userUrl, callback)
            },
            function(callback){
                addToMatchCollection(callback)
            },
            function(callback){
                checkForMatch(callback)
            },
            function(callback){
                closeDatabase(db, callback)
            },
            function(callback){
                closeDatabase(userdb, callback)
            }
        ])

        function connectToDatabase(url, callback) {
            MongoClient.connect(url, function(err, db2) {
                if(err){
                    console.log("Error connecting to database at " + url)
                    callback(error, "db connect error")
                    return
                }
                console.log("Connected to database at " + url)
                db = db2
                matchCollection = db.collection('matches')
                callback(err, db2);
            })
        }

        function connectToUserDb(url, callback) {
            MongoClient.connect(url, function(err, db2) {
                if(err){
                    console.log("Error connecting to database at " + url)
                    callback(error, "db connect error")
                    return
                }
                console.log("Connected to database at " + url)
                userdb = db2
                userCollection = userdb.collection('userMatches')
                callback(err, db2);
            })
        }

        function addToMatchCollection(callback){
            matchCollection.update(
                {"username" : username },
                {"username" : username,
                 "socketid" : socketid,
                 "artists" : artists
                },
                 {upsert:true}, function(err, result){
                    if(err){
                        callback(err)
                    }
                    console.log("Added " + username + " to match collection")
                    callback(err,result)
                })
        }

        function checkForMatch(callback){
            matchCollection.find({}).each(function (err, user){
                if(err || user == null)
                    callback(err, user)
                else
                {
                    var artistMatched = matchArtists(username, user.username, artists, user.artists)
                    if(artistMatched != null)
                    {
                        addToUser(username, user.username, artistMatched)
                        console.log("Found a match between " + username + " and " + user.username + " : " + artistMatched)
                    }
                }
            })
        }


        function addToUser(username, matchedUser, artist){
            userCollection = userdb.collection(username)
            userCollection.update(
                {"matchedUser" : matchedUser },
                {"matchedUser" : matchedUser,
                 "artist" : artist},
                 {upsert:true}, function(err, result){
                    console.log("Added " + matchedUser + " to " + username + "'s collection")
                })
        }

        function matchArtists(aUsername, bUsername, aArtists, bArtists)
        {
            if(aUsername == bUsername)
                return null
            else
            {
                for(i = 0; i < aArtists.length; ++i)
                {
                    for(j = 0; j < bArtists.length; ++j)
                    {
                        if(aArtists[i] == bArtists[j])
                            return aArtists[i];
                    }
                }
                return null
            }
        }

        function closeDatabase(database, callback){
                database.close()
                console.log("Closed connection to database")
                callback(null, "database closed")
        }
    }

    this.storeSocketId = function(username, socketid)
    {
        var collection
        var db

        async.series([
            function(callback){
                connectToDatabase(serverUrl, callback)
            },
            function(callback){
                updateSocketId(callback)
            },
            function(callback){
                closeDatabase(callback)
            }
        ])


        function connectToDatabase(url, callback) {
            MongoClient.connect(url, function(err, db2) {
                if(err){
                    console.log("Error connecting to database at " + url)
                    callback(error, "db connect error")
                    return
                }
                console.log("Connected to database at " + url)
                db = db2
                callback(err, db2);
            })
        }

        function updateSocketId(callback){
            collection = db.collection('matches')
            collection.update(
                {"username" : username },
                { $set: { "socketid" : socketid } }, function(err, result){
                    if(err){
                        callback(err)
                    }
                    console.log("Added " + username + " to match collection")
                    callback(err,result)
                })
        }

        function closeDatabase(callback){
                db.close()
                console.log("Closed connection to database")
                callback(null, "database closed")
        }
    }

    this.requestMatches = function(username)
    {
        var collection
        var db
        var userArr = []
        var JSONObj

        async.series([
            function(callback){
                connectToDatabase(userUrl, callback)
            },
            function(callback){
                matchEmitter(callback)
            },
            function(callback){
                emitReply(callback)
            },
            function(callback){
                closeDatabase(callback)
            }
        ])

        function connectToDatabase(url, callback) {
            MongoClient.connect(url, function(err, db2) {
                if(err){
                    console.log("Error connecting to database at " + url)
                    callback(error, "db connect error")
                    return
                }
                console.log("Connected to database at " + url)
                db = db2
                collection = db.collection(username)
                callback(err, db2);
            })
        }

        function matchEmitter(callback){
            console.log('acquiring matches')
            collection.find({}).each(function (err, user){
                if(err || user == null)
                    callback(err, user)
                else
                {
                    var matchProfile = {
                        username: user.matchedUser,
                        artist: user.artist
                    }
                    console.log("Matched with " + matchProfile.username + " : " + matchProfile.artist)
                    userArr.push(matchProfile)
                }
            })
        }

        function emitReply(callback){
            JSONObj = { "profiles" : userArr }
            console.log('Matched with ' + JSONObj.profiles.length + ' people, emitting reply')
            socket.emit('match_return', JSONObj)
            callback(null)
        }

        function closeDatabase(callback){
                db.close()
                console.log("Closed connection to database")
                callback(null, "database closed")
        }
    }
}
