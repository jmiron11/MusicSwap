var MongoClient = require('mongodb').MongoClient,
    assert = require('assert')
var serverUrl = 'mongodb://localhost:27017/server'
var bandUrl = 'mongodb://localhost:27017/bands'
var async = require('async')

var modifyProfile = function(username, artist1, artist2, artist3)
{
    var oldArtist1 = null
    var oldArtist2 = null
    var oldartist3 = null
    var oldProfile = false
    var collection
    var db

    /*
     * check for previous profile and get data on bands from it
     */
    async.series([
        function(callback){
            connectToDatabase(serverUrl, callback)
        },
        function(callback){
            setOldBands(callback)
        },
        function(callback){
            addProfile(callback)
        },
        function(callback){
            closeDatabase(callback)
        },
        function(callback){
            connectToDatabase(bandUrl, callback)
        },
        function(callback){
            removeUserFromArtist(oldArtist1, callback)
        },
        function(callback){
            removeUserFromArtist(oldArtist2, callback)
        },
        function(callback){
            removeUserFromArtist(oldartist3, callback)
        },
        function(callback){
            addUserToArtist(artist1, callback)
        },
        function(callback){
            addUserToArtist(artist2, callback)
        },
        function(callback){
            addUserToArtist(artist3, callback)
        },
        function(callback){
            closeDatabase(callback)
        }
    ])

    function connectToDatabase(url, callback) {
        MongoClient.connect(url, function(err, db2) {
            if(err){
                console.log("Error connecting to database at " + url)
                callback(error, "db connect error")
                return
            }
            console.log("Connected to database at " + url)
            db = db2
            callback(err, db2);
        })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }

    function setOldBands(callback){
        collection = db.collection("profiles")
            collection.find({"username" : username}, {}, {'limit':1}).toArray(function(err, users){
                if(!err){
                    console.log("The number of users with username " + username + " is " + users.length)
                    if(users.length != 0)
                    {
                        oldartist1 = users[0].artist1
                        oldArtist2 = users[0].artist2
                        oldartist3 = users[0].artist3
                        oldProfile = true
                        callback(err, users)
                    }
                    else
                    {
                        console.log("No user with the username " + username)
                            callback(err)
                    }
                }
                else
                {
                    console.log("Error on find")
                    callback(err)
                }
            })
    }

    function addProfile(callback){
        collection = db.collection("profiles")
        if(oldProfile)
        {
            collection.remove({"username" : username}, function(err, result){
            console.log("Removed " + username + "'s profile")
            collection.insert({"username" : username,
                               "artist1" : artist1,
                               "artist2" : artist2,
                               "artist3" : artist3
                             }, function(err, result){
                                console.log("Added " + username + "'s profile")
                                callback(err, result)
                             })
            })
        }
        else{
            collection.insert({"username" : username,
                               "artist1" : artist1,
                               "artist2" : artist2,
                               "artist3" : artist3
                             }, function(err, result){
                                console.log("Added " + username + "'s profile")
                                callback(err, result)
            })
        }
    }

    function removeUserFromArtist(artist, callback){
        if(oldProfile)
        {
            collection = db.collection(artist)
            collection.remove({"username" : username}, function(err, result){
                if(!err)
                {
                    console.log("Removed " + username + " from " + artist)
                    callback(err,result)
                }
                else
                {
                    callback(err)
                }
            })
        }
        else
        {
            callback(null)
        }
    }

    function addUserToArtist(artist, callback){
        collection = db.collection(artist)
            collection.update(
                {"username" : username },
                {"username" : username,
                 "datetime" : new Date() },
                {upsert:true}, function (err, result) {
                    if(err){
                        callback(err)
                    }
                    console.log("Added " + username + " to artist " + artist)
                    callback(err,result)
            })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }
}

var findMatch = function(username, socketid, artist1, artist2, artist3)
{
    var collection
    var db

    async.series([
        function(callback){
            connectToDatabase(serverUrl, callback)
        },
        function(callback){
            addToMatchCollection(callback)
        },
        function(callback){
            checkForMatch(callback)
        },
        function(callback){
            closeDatabase(callback)
        }
    ])

    function connectToDatabase(url, callback) {
        console.log("EYYO")
        MongoClient.connect(url, function(err, db2) {
            if(err){
                console.log("Error connecting to database at " + url)
                callback(error, "db connect error")
                return
            }
            console.log("Connected to database at " + url)
            db = db2
            callback(err, db2);
        })
    }

    function addToMatchCollection(callback){
        collection = db.collection('toMatch')
        collection.update(
            {"username" : username },
            {"username" : username,
             "socketid" : socketid,
             "artist1" : artist1,
             "artist2" : artist2,
             "artist3" : artist3},
             {upsert:true}, function(err, result){
                if(err){
                    callback(err)
                }
                console.log("Added " + username + " to match collection")
                callback(err,result)
            })
    }

    function checkForMatch(callback){
        collection = db.collection('toMatch')
        collection.find({}, function(err, resultCursor){
            function processDocument(err, user){
                if(err || user == null)
                    callback(err,user)

                if(isMatch(artist1, artist2, artist3, user.artist1, user.artist2, user.artist3))
                {
                    console.log("Found a match between " + username + " and " + user.username)
                    addUsersToConnected(username, socketid, user.username, user.socketid, function(err){
                        callback(err)
                    })
                }
            }
            resultCursor.nextObject(processDocument)
        })
    }

    function addUsersToConnected(username1, socketid1, username2, socketid2, callback)
    {
        var connectedCollection = db.collection('connected')
        connectedCollection.insert({"user1" : username1,
                           "socketId1" : socketid1,
                           "user2" : username2,
                           "socketId2" : socketid2
                         }, function(err, result){
                            if(err)
                                callback(err)

                            console.log("Added " + username1  + " : " + socketid1 + " and " + username2 + " : " + socketid2 + " to connected collection")
                            callback()
        })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }
}

function isMatch(aUsername, bUsername, aArtist1, aArtist2, aArtist3, bArtist1, bArtist2, bArtist3)
{
    if(aUsername == bUsername)
        return false
    else
    {
         return (aBand1 == bArtist1) || (aBand1 == bArtist2) || (aBand1 == bArtist3)
                || (aArtist2 == bArtist1) || (aArtist2 == bArtist2) || (aArtist2 == bArtist3)
                || (aArtist3 == bArtist1) || (aArtist3 == bArtist2) || (aArtist3 == bArtist3)
    }
}


exports.modifyProfile = modifyProfile
exports.findMatch = findMatch
