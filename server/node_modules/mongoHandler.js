var MongoClient = require('mongodb').MongoClient,
    assert = require('assert')
var serverUrl = 'mongodb://localhost:27017/server'
var bandUrl = 'mongodb://localhost:27017/bands'
var async = require('async')

var modifyProfile = function(username, band1, band2, band3)
{
    var oldBand1 = null
    var oldBand2 = null
    var oldBand3 = null
    var oldProfile = false
    var collection
    var db

    /*
     * check for previous profile and get data on bands from it
     */
    async.series([
        function(callback){
            connectToDatabase(serverUrl, callback)
        },
        function(callback){
            setOldBands(callback)
        },
        function(callback){
            addProfile(callback)
        },
        function(callback){
            closeDatabase(callback)
        },
        function(callback){
            connectToDatabase(bandUrl, callback)
        },
        function(callback){
            removeUserFromBand(oldBand1, callback)
        },
        function(callback){
            removeUserFromBand(oldBand2, callback)
        },
        function(callback){
            removeUserFromBand(oldBand3, callback)
        },
        function(callback){
            addUserFromBand(band1, callback)
        },
        function(callback){
            addUserFromBand(band2, callback)
        },
        function(callback){
            addUserFromBand(band3, callback)
        },
        function(callback){
            closeDatabase(callback)
        }
    ])

    function connectToDatabase(url, callback) {
        MongoClient.connect(url, function(err, db2) {
            if(err){
                console.log("Error connecting to database at " + url)
                callback(error, "db connect error")
                return
            }
            console.log("Connected to database at " + url)
            db = db2
            callback(err, db2);
        })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }

    function setOldBands(callback){
        collection = db.collection("profiles")
            collection.find({"username" : username}, {}, {'limit':1}).toArray(function(err, users){
                if(!err){
                    console.log("The number of users with username " + username + " is " + users.length)
                    if(users.length != 0)
                    {
                        oldBand1 = users[0].band1
                        oldBand2 = users[0].band2
                        oldBand3 = users[0].band3
                        oldProfile = true
                        callback(err, users)
                    }
                    else
                    {
                        console.log("No user with the username " + username)
                            callback(err)
                    }
                }
                else
                {
                    console.log("Error on find")
                    callback(err)
                }
            })
    }

    function addProfile(callback){
        collection = db.collection("profiles")
            if(oldProfile)
            {
                collection.remove({"username" : username}, function(err, result){
                console.log("Removed " + username + "'s profile")
                collection.insert({"username" : username,
                                   "band1" : band1,
                                   "band2" : band2,
                                   "band3" : band3
                                 }, function(err, result){
                                    console.log("Added " + username + "'s profile")
                                    callback(err, result)
                                 })
                })
            }
            else{
                collection.insert({"username" : username,
                                   "band1" : band1,
                                   "band2" : band2,
                                   "band3" : band3
                                 }, function(err, result){
                                    console.log("Added " + username + "'s profile")
                                    callback(err, result)
                })
            }
    }

    function removeUserFromBand(band, callback){
        if(oldProfile)
            {
                collection = db.collection(band)
                collection.remove({"username" : username}, function(err, result){
                    if(!err)
                    {
                        console.log("Removed " + username + " from " + band)
                        callback(err,result)
                    }
                    else
                    {
                        callback(err)
                    }
                })
            }
            else
            {
                callback(null)
            }
    }

    function addUserFromBand(band, callback){
        collection = db.collection(band)
            collection.update(
                {"username" : username },
                {"username" : username,
                 "datetime" : new Date() },
                {upsert:true}, function (err, result) {
                    if(err){
                        callback(err)
                    }
                    console.log("Added " + username + " to band " + band)
                    callback(err,result)
            })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }
}

var findMatch = function(username, socketid, band1, band2, band3)
{
    var collection
    var db

    async.series([
        function(callback){
            connectToDatabase(serverUrl, callback)
        },
        function(callback){
            addToMatchCollection(callback)
        },
        function(callback){
            checkForMatch(callback)
        },
        function(callback){
            closeDatabase(callback)
        }
    ])

    function connectToDatabase(url, callback) {
        console.log("EYYO")
        MongoClient.connect(url, function(err, db2) {
            if(err){
                console.log("Error connecting to database at " + url)
                callback(error, "db connect error")
                return
            }
            console.log("Connected to database at " + url)
            db = db2
            callback(err, db2);
        })
    }

    function addToMatchCollection(callback){
        collection = db.collection('toMatch')
        collection.update(
            {"username" : username },
            {"username" : username,
             "socketid" : socketid,
             "band1" : band1,
             "band2" : band2,
             "band3" : band3},
             {upsert:true}, function(err, result){
                if(err){
                    callback(err)
                }
                console.log("Added " + username + " to match collection")
                callback(err,result)
            })
    }

    function checkForMatch(callback){
        collection = db.collection('toMatch')
        collection.find({}, function(err, resultCursor){
            function processDocument(err, user){
                if(err || user == null)
                    callback(err,user)

                if(isMatch(band1, band2, band3, user.band1, user.band2, user.band3))
                {
                    console.log("Found a match between " + username + " and " + user.username)
                    addUsersToConnected(username, socketid, user.username, user.socketid, function(err){
                        callback(err)
                    })
                }
            }
            resultCursor.nextObject(processDocument)
        })
    }

    function addUsersToConnected(username1, socketid1, username2, socketid2, callback)
    {
        var connectedCollection = db.collection('connected')
        connectedCollection.insert({"user1" : username1,
                           "socketId1" : socketid1,
                           "user2" : username2,
                           "socketId2" : socketid2
                         }, function(err, result){
                            if(err)
                                callback(err)

                            console.log("Added " + username1  + " : " + socketid1 + " and " + username2 + " : " + socketid2 + " to connected collection")
                            callback()
        })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }
}

function isMatch(aUsername, bUsername, aBand1, aBand2, aBand3, bBand1, bBand2, bBand3)
{
    if(aUsername == bUsername)
        return false
    else
    {
         return (aBand1 == bBand1) || (aBand1 == bBand2) || (aBand1 == bBand3)
                || (aBand2 == bBand1) || (aBand2 == bBand2) || (aBand2 == bBand3)
                || (aBand3 == bBand1) || (aBand3 == bBand2) || (aBand3 == bBand3)
    }
}


exports.modifyProfile = modifyProfile
exports.findMatch = findMatch
