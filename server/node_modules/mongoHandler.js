var MongoClient = require('mongodb').MongoClient,
    assert = require('assert')
var serverUrl = 'mongodb://localhost:27017/server'
var bandUrl = 'mongodb://localhost:27017/bands'
var async = require('async')

var modifyProfile = function(username, band1, band2, band3)
{
    var oldBand1 = null
    var oldBand2 = null
    var oldBand3 = null
    var oldProfile = false
    var collection
    var db

    /*
     * check for previous profile and get data on bands from it
     */

    async.series([
        function(callback){
            connectToDatabase(serverUrl, callback)
        },
        function(callback){
            setOldBands(callback)
        },
        function(callback){
            addProfile(callback)
        },
        function(callback){
            closeDatabase(callback)
        },
        function(callback){
            connectToDatabase(bandUrl, callback)
        },
        function(callback){
            removeUserFromBand(oldBand1, callback)
        },
        function(callback){
            removeUserFromBand(oldBand2, callback)
        },
        function(callback){
            removeUserFromBand(oldBand3, callback)
        },
        function(callback){
            addUserFromBand(band1, callback)
        },
        function(callback){
            addUserFromBand(band2, callback)
        },
        function(callback){
            addUserFromBand(band3, callback)
        },
        function(callback){
            closeDatabase(callback)
        }]
    )

    function connectToDatabase(url, callback) {
             MongoClient.connect(url, function(err, db2) {
                    if(err){
                        console.log("Error connecting to database at " + url)
                        callback(error, "db connect error")
                        return
                    }
                    console.log("Connected to database at " + url)
                    db = db2
                    callback(err, db2);
                })
    }

    function closeDatabase(callback){
            db.close()
            console.log("Closed connection to database")
            callback(null, "database closed")
    }

    function setOldBands(callback){
        collection = db.collection("profiles")
            collection.find({"username" : username}, {}, {'limit':1}).toArray(function(err, users){
                if(!err){
                    console.log("The number of users with username " + username + " is " + users.length)
                    if(users.length != 0)
                    {
                        oldBand1 = users[0].band1
                        oldBand2 = users[0].band2
                        oldBand3 = users[0].band3
                        oldProfile = true
                        callback(err, users)
                    }
                    else
                    {
                        console.log("No user with the username " + username)
                            callback(err)
                    }
                }
                else
                {
                    console.log("Error on find")
                    callback(err)
                }
            })
    }

    function addProfile(callback){
        collection = db.collection("profiles")
            if(oldProfile)
            {
                collection.remove({"username" : username}, function(err, result){
                console.log("Removed " + username + "'s profile")
                collection.insert({"username" : username,
                                   "band1" : band1,
                                   "band2" : band2,
                                   "band3" : band3
                                 }, function(err, result){
                                    console.log("Added " + username + "'s profile")
                                    callback(err, result)
                                 })
                })
            }
            else{
                collection.insert({"username" : username,
                                   "band1" : band1,
                                   "band2" : band2,
                                   "band3" : band3
                                 }, function(err, result){
                                    console.log("Added " + username + "'s profile")
                                    callback(err, result)
                })
            }
    }

    function removeUserFromBand(band, callback){
        if(oldProfile)
            {
                collection = db.collection(band)
                collection.remove({"username" : username}, function(err, result){
                    if(!err)
                    {
                        console.log("Removed " + username + " from " + band)
                        callback(err,result)
                    }
                    else
                    {
                        callback(err)
                    }
                })
            }
            else
            {
                callback(null)
            }
    }

    function addUserFromBand(band, callback){
        collection = db.collection(band)
            collection.update(
                {"username" : username },
                {"username" : username,
                 "datetime" : new Date() },
                {upsert:true}, function (err, result) {
                    if(err){
                        callback(err)
                    }
                    console.log("Added " + username + " to band " + band)
                    callback(err,result)
            })
    }
}

// var findMatch = function(username)
// {
//     //check the band collections that the user is apart of
//     var band1
//     var band2
//     var band3

//     async.series([
//         function(callback){
//             connectToDatabase(serverUrl, callback)
//         },
//         function(callback){
//             setBands(callback)
//         },
//         function(callback){
//             closeDatabase(callback)
//         }
//     ])

//     function setBands(callback){
//         collection = db.collection("profiles")
//             collection.find({"username" : username}, {}, {'limit':1}).toArray(function(err, users){
//                 if(!err){
//                     console.log("The number of users with username " + username + " is " + users.length)
//                     if(users.length != 0)
//                     {
//                         band1 = users[0].band1
//                         band2 = users[0].band2
//                         band3 = users[0].band3
//                         oldProfile = true
//                         callback(err, users)
//                     }
//                     else
//                     {
//                         console.log("No user with the username " + username)
//                             callback(err)
//                     }
//                 }
//                 else
//                 {
//                     console.log("Error on find")
//                     callback(err)
//                 }
//             })
//     }

//     //once you find a user that they match with, place them
//     // in the users collection, store socket id as a field for both


//     //once a match is found emit that a match is found
// }


exports.modifyProfile = modifyProfile
// exports.findMatch = findMatch
