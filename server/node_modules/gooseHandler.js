var monose = require( 'mongoose' ),
    User = require('../model/user').User
    Match = require('../model/match').Match
    Profile = require('../model/profile').Profile
    async = require('async')


exports.updateSocketId = function(username, socketId) {

    var query = { 'username' : username }
    var update = {'username' : username,
                  'socketid' : socketId }
    var options = { upsert : true }
    User.findOneAndUpdate(query, update, options).exec()
    console.log('Updated SocketID')
}

exports.addProfile = function(profile) {
	if(profile == null)
	{
		console.log('null profile')
		return
	}

    var query = { 'username' : profile.username }
    var update = { 'username' : profile.username,
				   'artists'  : profile.artists }
	var options = { upsert : true }
    Profile.findOneAndUpdate(query, update, options).exec()
    console.log('Added ' + profile.username + "'s profile")
}

exports.updateMatches = function(username) {
	async.waterfall([
		function(callback){
            console.log('on to get artists')
			getArtists(username, callback)
		},
		function(artists, callback){
            getUsers(username, artists, callback)
        },
        function(usersFound, artists, callback){
            findMatches(username, usersFound, artists, callback)
        }
		])
}

//TODO: I don't want to push if the artist already exists in the array
function getArtists(username, callback) {
    console.log('Getting ' + username + "'s artists")
    var query = Profile.where({ 'username' : username })
    var artists = []
    query.findOne(function(err, profile) {
        if (err || profile == null){
             return callback(err)
        }
        if(profile){
            artists = profile.artists
            return callback(null, artists)
        }
    })
}

function getUsers(username, artists, callback) {
    console.log('Finding matches for ' + username)
	Profile.find(function (err, usersFound){
        if(err) {
            callback(err, user)
        }

        callback(null, usersFound, artists)
    })
}

function findMatches(username, usersFound, artists, callback)
{
    async.each(usersFound, function(user, callback) {
        var artistMatched = matchArtists(username, user.username, artists, user.artists)
        if(artistMatched != null)
        {
            addToMatch(username, user.username, artistMatched)
            console.log("Found a match between " + username + " and " + user.username + " : " + artistMatched)
        }
    }, callback)
}

// find all people that like that artist as well, add them to username's match
//TODO: Fix the add if not in array
function addToMatch(username, matchUsername, artist)
{
	var query = { 'username' : username,
                  'matches.userame' : { $ne : matchUsername } }
	var newMatch = { 'username' : matchUsername,
					 'artist'   : artist }
	var update = { $addToSet: {matches : newMatch} }
	var options = { upsert : true }
	Match.findOneAndUpdate(query, update, options).exec()
}

function matchArtists(aUsername, bUsername, aArtists, bArtists)
{
    if(aUsername == bUsername)
        return null
    else
    {
        for(i = 0; i < aArtists.length; ++i)
        {
            for(j = 0; j < bArtists.length; ++j)
            {
                if(aArtists[i] == bArtists[j])
                    return aArtists[i];
            }
        }
        return null
    }
}

exports.returnMatches = function(username, socket) {
    var matchArr = []
    var query = { 'username' : username }
    Match.findOne(query, function(err, user){
        if(err || user == null)
        {
            console.log(err)
            return
        }

        async.each(user.matches, function(match, callback){
            var matchProfile = {
                username: match.username,
                artist: match.artist
            }
            console.log("Matched with " + match.username + " : " + match.artist)
            matchArr.push(matchProfile)
            callback(null)
        }, function(err){
            if(err){
                console.log(err)
                return callback(err)
            }
            else{
                console.log('Arrlength: ' + matchArr.length)
                console.log('Emitting return')
                socket.emit('match_return', matchArr)
            }
        })
    })
}


// add profile
// with those profiles find matches, add to user match


// eventually use socket ids to connect users

